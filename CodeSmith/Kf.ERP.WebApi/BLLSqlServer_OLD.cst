<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False" Description="Create a list of properties from database table." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on."%>
<%@ Property Name="ModelName" Type="String" Default="ModelName" Optional="true" Category="String" Description="EntityObject Model Name" %>
<%@ Property Name="namespacename" Type="String" Default="Kf.WebApi.Sso.BLL" Optional="false" Category="String" Description="Kf.WebApi.Sso.BLL" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
/*****************
Name: <%=ModelName%>BLL
Author: kinfar
Description: 
****************/
using System.Collections.Generic;
using Kf.WebApi.Sso.Factory;
using Kf.WebApi.Sso.Models;
using Kf.WebApi.Sso.IDal;

namespace <%=namespacename%>
{
    public class <%=ModelName%>BLL
    {
        #region Auto By Kinfar Auto Creater
		private static I<%=ModelName%>DAL dal = DALFactory.Create<%=ModelName%>DAL();
        private static <%=ModelName%>BLL _<%=ModelName%>BLL;
        public <%=ModelName%>BLL() { }
        public static <%=ModelName%>BLL Instance() 
        { 
            if(_<%=ModelName%>BLL==null)
                _<%=ModelName%>BLL = new <%=ModelName%>BLL();
            return _<%=ModelName%>BLL;
        }

        public bool Insert(<%=ModelName%> <%=ModelName.ToLower()%>)
        {
            return dal.Insert(<%=ModelName.ToLower()%>) > 0 ? true : false;
        }

        public bool Update(<%=ModelName%> <%=ModelName.ToLower()%>)
        {
            return dal.Update(<%=ModelName.ToLower()%>) > 0 ? true : false;
        }

        public bool Delete(<%=ModelName%> <%=ModelName.ToLower()%>)
        {
            return dal.Delete(<%=ModelName.ToLower()%>) > 0 ? true : false;
        }

        public bool Delete(int? <%=SourceTable.PrimaryKey.MemberColumns[0].Column.Name%>)
        {
            return dal.Delete(<%=SourceTable.PrimaryKey.MemberColumns[0].Column.Name%>) > 0 ? true : false;
        }

        public IList<<%=ModelName%>> GetBookList()
        {
            return dal.GetList();
        }

        public <%=ModelName%> GetEntity(int? <%=SourceTable.PrimaryKey.MemberColumns[0].Column.Name%>)
        {
            return dal.GetEntity(<%=SourceTable.PrimaryKey.MemberColumns[0].Column.Name%>);
        }
        #endregion

        #region Customer Define

        #endregion
    }
}
<script runat="template">
public string GetTableColumnString()
{
	string s="";
    foreach(SchemaExplorer.ColumnSchema col in SourceTable.Columns)
    {
        if(col.IsPrimaryKeyMember || col.NativeType.ToLower()=="timestamp")
        {}
        else
        {
            s+=",["+ col.Name +"]"   ;
        }
    }
    if(s.Length>0)   s=s.Substring(1);
    return s;
}
public string GetTableColumnParantString()
{
	string s="";
    foreach(SchemaExplorer.ColumnSchema col in SourceTable.Columns)
    {
        if(col.IsPrimaryKeyMember || col.NativeType.ToLower()=="timestamp")
        {}
        else
        {
            s+=",@"+ col.Name;
        }
    }
    if(s.Length>0)  s=s.Substring(1);
    return s;
}

public string GetUpdateTableColumnParantString()
{
	string s="";
    foreach(SchemaExplorer.ColumnSchema col in SourceTable.Columns)
    {
        if(col.IsPrimaryKeyMember || col.NativeType.ToLower()=="timestamp")
        {}
        else
        {
            s+=",["+ col.Name +"]"+"=,@"+ col.Name;
        }
    }
    if(s.Length>0)  s=s.Substring(1);
    return s;
}
</script>